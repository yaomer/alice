# 1gb = 1024 * 1024 * 1024 bytes
# 1mb = 1024 * 1024 bytes
# 1kb = 1024 bytes
# 服务器运行IP
ip 127.0.0.1
# 服务器运行端口
port 1296
# 底层存储引擎选择
# mmdb: base on memory
# ssdb: base on disk (use leveldb)
engine ssdb
# master-slave连接超时判断(s)
repl-timeout 60
# 从服务器每隔多久向主服务器发送PING(s)
repl-ping-period 10
# 复制积压缓冲区的大小
repl-backlog-size 1mb
# 记录慢查询日志的最小时间(us)
slowlog-log-slower-than 10000
# 最多记录多少条慢查询日志
slowlog-max-len 128
# 让服务器以从服务器方式运行
# slaveof <master-ip> <master-port>
# slaveof 127.0.0.1 1296
# 多线程模式
# multi-threads 4
# 创建多少个数据库
mmdb-databases 16
# 每次定期删除过期键时检查的数据库个数
mmdb-expire-check-dbnums 16
# 每个数据库检查的键数
mmdb-expire-check-keys 20
# 服务器可使用的最大内存
# 0: unlimited
mmdb-maxmemory 0
# 内存淘汰策略
# allkeys-lru: 采用lru淘汰所有键
# volatile-lru: 采用lru淘汰过期键
# allkeys-random: 随机回收所有的键
# volatile-random: 随机回收过期键
# volatile-ttl: 根据ttl淘汰过期键
# noeviction: 默认不进行内存淘汰
mmdb-maxmemory-policy noeviction
# 内存淘汰时随机选取的键数目
mmdb-maxmemory-samples 5
# mmdb-save <seconds> <changes>
# 在seconds时间内有changes次写操作，就会触发rdb持久化
# 以下多组条件任一满足即可
mmdb-save 900 1
mmdb-save 300 10
mmdb-save 60 10000
mmdb-save 10 50000
mmdb-save 1 100000
# 生成rdb快照时是否需要压缩 yes/no
mmdb-rdb-compress yes
# len(value)大于多少时进行压缩(bytes)
mmdb-rdb-compress-limit 20
# rdb文件的存储位置
mmdb-rdb-file dump.rdb
# 是否开启aof持久化 yes/no
mmdb-appendonly no
# aof持久化的模式 always/everysec/no
mmdb-appendfsync everysec
# aof文件的存储位置
mmdb-appendonly-file appendonly.aof
## SSDB
ssdb-leveldb-dbname .testdb
# pack with tar
ssdb-snapshot-name ssdb-dump.tar
# same as mmdb
ssdb-expire-check-keys 20
# leveldb options
# yes/no
ssdb-leveldb-create-if-missing yes
# 较大的buffer可能会带来更高的性能
ssdb-leveldb-write-buffer-size 4mb
ssdb-leveldb-max-open-files 65535
ssdb-leveldb-max-file-size 2mb
